import { request } from '@playwright/test';
import axios, { AxiosRequestConfig } from 'axios';
import FormData from 'form-data';

// 🔹 Konfiguracja proxy
const proxyConfig = {
  host: 'proxy.example.com',
  port: 8080,
  username: 'proxyUser',
  password: 'proxyPass',
};

// 🔹 Konfiguracja autoryzacji (Basic Auth)
const authConfig = {
  username: 'apiUser',
  password: 'apiPass',
};

// 🔹 Funkcja do wykonania requestu
async function sendPostRequest() {
  // 1️⃣ Tworzymy form-data
  const form = new FormData();
  form.append('key1', 'value1');
  form.append('key2', 'value2');
  
  // 2️⃣ Pobieramy nagłówki generowane przez form-data
  const headers = form.getHeaders();
  headers['Authorization'] = `Basic ${Buffer.from(`${authConfig.username}:${authConfig.password}`).toString('base64')}`;

  // 3️⃣ Konfiguracja AxiosRequestConfig
  const axiosConfig: AxiosRequestConfig = {
    method: 'POST',
    url: 'https://api.example.com/endpoint',  // 🔹 Zmień na swój URL
    headers: headers,
    data: form,
    proxy: {
      protocol: 'http',
      host: proxyConfig.host,
      port: proxyConfig.port,
      auth: {
        username: proxyConfig.username,
        password: proxyConfig.password,
      },
    },
  };

  try {
    // 4️⃣ Wysyłamy żądanie
    const response = await axios(axiosConfig);
    console.log('Response:', response.data);
  } catch (error: any) {
    console.error('Error:', error.response ? error.response.data : error.message);
  }
}

// 🔹 Uruchomienie requestu w Playwright
(async () => {
  const context = await request.newContext();
  await sendPostRequest();
  await context.dispose();
})();
