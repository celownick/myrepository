import java.io.File;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Optional;

public class LatestFileFinder {
    public static Optional<File> findLatestFileModifiedToday(File[] matchingFiles) {
        LocalDate today = LocalDate.now();

        return Arrays.stream(matchingFiles)
            .filter(file -> {
                LocalDate fileModifiedDate = LocalDate.ofInstant(
                    file.lastModified() > 0 ?
                        java.time.Instant.ofEpochMilli(file.lastModified()) :
                        java.time.Instant.now(), // Obs≈Çuga b≈Çƒôdnych dat
                    ZoneId.systemDefault()
                );
                return fileModifiedDate.equals(today);
            })
            .max(Comparator.comparingLong(File::lastModified));
    }

    public static void main(String[] args) {
        File folder = new File("C:/logs");
        File[] matchingFiles = folder.listFiles((dir, name) -> name.endsWith(".log"));

        Optional<File> latestFile = findLatestFileModifiedToday(matchingFiles != null ? matchingFiles : new File[0]);

        latestFile.ifPresentOrElse(
            file -> System.out.println("üìÇ Najnowszy plik zmodyfikowany dzisiaj: " + file.getName()),
            () -> System.out.println("‚ùå Brak plik√≥w zmodyfikowanych dzisiaj")
        );
    }
}
