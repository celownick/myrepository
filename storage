@Before
public void beforeScenario(Scenario scenario) {
    // Generowanie unikalnej nazwy pliku logów
    String scenarioName = scenario.getName().replaceAll("\\s+", "_");
    String uniqueId = UUID.randomUUID().toString();
    logFilePath = "target/logs/test-logs-" + scenarioName + "-" + uniqueId + ".log";

    // Tworzenie pliku logów i folderów
    try {
        Path path = Paths.get(logFilePath);
        if (!Files.exists(path.getParent())) {
            Files.createDirectories(path.getParent());
        }
        Files.createFile(path);
    } catch (IOException e) {
        logger.error("Failed to create log file for scenario: " + scenario.getName(), e);
    }

    // Ustawienie dynamicznej ścieżki dla appendera FILE
    LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
    Logger rootLogger = context.getLogger("ROOT");
    FileAppender<ILoggingEvent> fileAppender = (FileAppender<ILoggingEvent>) rootLogger.getAppender("FILE");

    if (fileAppender != null) {
        fileAppender.stop(); // Zatrzymanie aktualnego appendera
        fileAppender.setFile(logFilePath); // Ustawienie nowej ścieżki
        fileAppender.start(); // Uruchomienie z nową ścieżką
    }
}
