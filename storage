@Before
    public void beforeScenario(Scenario scenario) {
        // Generowanie unikalnej nazwy pliku logów na podstawie nazwy scenariusza lub ID
        String scenarioName = scenario.getName().replaceAll("\\s+", "_"); // Zastępuje spacje podkreśleniami
        String uniqueId = UUID.randomUUID().toString(); // Losowy identyfikator
        logFilePath = "target/logs/test-logs-" + scenarioName + "-" + uniqueId + ".log";
        
        // Tworzenie pliku logów przed rozpoczęciem testu
        try {
            Path path = Paths.get(logFilePath);
            if (!Files.exists(path.getParent())) {
                Files.createDirectories(path.getParent()); // Tworzymy foldery, jeśli nie istnieją
            }
            Files.createFile(path); // Tworzymy plik logu
        } catch (IOException e) {
            logger.error("Failed to create log file for scenario: " + scenario.getName(), e);
        }

        // Konfigurujemy logback do zapisu logów do tego unikalnego pliku
        // Warto tu zainstalować logger, który zapisuje logi do tego pliku, np. poprzez dynamiczną zmianę appendera.
    }

    @After
    public void afterScenario(Scenario scenario) {
        // Zbieramy logi z pliku po zakończeniu scenariusza
        try {
            String logs = gatherLogs(logFilePath);
            
            // Dołączamy logi do raportu Cucumbera
            scenario.attach(logs.getBytes(), "text/plain", "Logs for " + scenario.getName());
            
            // Usuwamy plik logów po zakończeniu scenariusza (jeśli chcesz usunąć logi po każdym scenariuszu)
            Files.deleteIfExists(Paths.get(logFilePath));
        } catch (IOException e) {
            logger.error("Failed to gather logs or delete the log file after scenario: " + scenario.getName(), e);
        }
    }

    // Metoda do zbierania logów z pliku
    private String gatherLogs(String logFilePath) throws IOException {
        // Odczytanie zawartości pliku logów jako tekst
        return new String(Files.readAllBytes(Paths.get(logFilePath)));
    }
}
